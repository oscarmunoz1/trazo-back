# Generated by Django 4.1.4 on 2025-05-17 15:07

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("history", "0008_history_age_of_plants_history_is_outdoor_and_more"),
        ("carbon", "0004_sustainabilitybadge_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="GreenPoints",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.IntegerField(default=0)),
                ("last_scan", models.DateTimeField(blank=True, null=True)),
                ("achievements", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="MicroOffset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.05),
                            django.core.validators.MaxValueValidator(0.1),
                        ]
                    ),
                ),
                ("provider", models.CharField(default="wren", max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("transaction_id", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="carbonbenchmark",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="carbonauditlog",
            name="created_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonauditlog",
            name="ip_address",
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="carbonbenchmark",
            name="created_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonbenchmark",
            name="crop_type",
            field=models.CharField(
                blank=True, help_text="Specific crop type if applicable", max_length=100
            ),
        ),
        migrations.AddField(
            model_name="carbonbenchmark",
            name="region",
            field=models.CharField(
                blank=True, help_text="Geographic region if applicable", max_length=100
            ),
        ),
        migrations.AddField(
            model_name="carbonbenchmark",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonbenchmark",
            name="usda_verified",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="carboncertification",
            name="created_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carboncertification",
            name="is_usda_soe_verified",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="carboncertification",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carboncertification",
            name="verification_date",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="carboncertification",
            name="verification_details",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="carbonentry",
            name="cost",
            field=models.FloatField(
                default=0.0, help_text="Associated cost for ROI calculations"
            ),
        ),
        migrations.AddField(
            model_name="carbonentry",
            name="created_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonentry",
            name="iot_device_id",
            field=models.CharField(
                blank=True,
                help_text="ID of IoT device if automated entry",
                max_length=100,
            ),
        ),
        migrations.AddField(
            model_name="carbonentry",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonentry",
            name="usda_verified",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="carbonoffsetaction",
            name="cost_per_unit",
            field=models.FloatField(
                default=0.0, help_text="Cost per unit for ROI calculations"
            ),
        ),
        migrations.AddField(
            model_name="carbonoffsetaction",
            name="created_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonoffsetaction",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonoffsetaction",
            name="usda_verified",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="carbonreport",
            name="cost_savings",
            field=models.FloatField(default=0.0, help_text="Cost savings achieved"),
        ),
        migrations.AddField(
            model_name="carbonreport",
            name="created_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonreport",
            name="recommendations",
            field=models.JSONField(
                default=list, help_text="List of cost-saving recommendations"
            ),
        ),
        migrations.AddField(
            model_name="carbonreport",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonreport",
            name="usda_verified",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="carbonsource",
            name="cost_per_unit",
            field=models.FloatField(
                default=0.0, help_text="Cost per unit for ROI calculations"
            ),
        ),
        migrations.AddField(
            model_name="carbonsource",
            name="created_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonsource",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="carbonsource",
            name="usda_verified",
            field=models.BooleanField(
                default=False, help_text="Whether this source is verified by USDA"
            ),
        ),
        migrations.AddField(
            model_name="sustainabilitybadge",
            name="created_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="sustainabilitybadge",
            name="description",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="sustainabilitybadge",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="sustainabilitybadge",
            name="usda_verified",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="carbonauditlog",
            name="timestamp",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name="carbonreport",
            name="carbon_score",
            field=models.IntegerField(
                default=0,
                help_text="Score from 1 to 100",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterUniqueTogether(
            name="carbonbenchmark",
            unique_together={("industry", "year", "crop_type", "region")},
        ),
        migrations.AddIndex(
            model_name="carbonauditlog",
            index=models.Index(fields=["action"], name="carbon_carb_action_7b3380_idx"),
        ),
        migrations.AddIndex(
            model_name="carbonauditlog",
            index=models.Index(
                fields=["timestamp"], name="carbon_carb_timesta_d7403f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonauditlog",
            index=models.Index(
                fields=["ip_address"], name="carbon_carb_ip_addr_b4fad4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonbenchmark",
            index=models.Index(
                fields=["crop_type"], name="carbon_carb_crop_ty_055dfa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonbenchmark",
            index=models.Index(fields=["region"], name="carbon_carb_region_d7b1ff_idx"),
        ),
        migrations.AddIndex(
            model_name="carbonbenchmark",
            index=models.Index(
                fields=["usda_verified"], name="carbon_carb_usda_ve_b88ee0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carboncertification",
            index=models.Index(
                fields=["is_usda_soe_verified"], name="carbon_carb_is_usda_cf2d3c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carboncertification",
            index=models.Index(
                fields=["verification_date"], name="carbon_carb_verific_995756_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonentry",
            index=models.Index(
                fields=["iot_device_id"], name="carbon_carb_iot_dev_35c2c3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonentry",
            index=models.Index(
                fields=["usda_verified"], name="carbon_carb_usda_ve_60ecf3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonreport",
            index=models.Index(
                fields=["usda_verified"], name="carbon_carb_usda_ve_ff76a3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonreport",
            index=models.Index(
                fields=["carbon_score"], name="carbon_carb_carbon__a6f120_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonreport",
            index=models.Index(
                fields=["cost_savings"], name="carbon_carb_cost_sa_690484_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonsource",
            index=models.Index(
                fields=["category"], name="carbon_carb_categor_4524b9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="carbonsource",
            index=models.Index(
                fields=["usda_verified"], name="carbon_carb_usda_ve_35ffb1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="sustainabilitybadge",
            index=models.Index(
                fields=["usda_verified"], name="carbon_sust_usda_ve_925ceb_idx"
            ),
        ),
        migrations.AddField(
            model_name="microoffset",
            name="production",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="history.history"
            ),
        ),
        migrations.AddField(
            model_name="microoffset",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="greenpoints",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddIndex(
            model_name="microoffset",
            index=models.Index(fields=["status"], name="carbon_micr_status_838c7b_idx"),
        ),
        migrations.AddIndex(
            model_name="microoffset",
            index=models.Index(
                fields=["created_at"], name="carbon_micr_created_46f36f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="greenpoints",
            index=models.Index(fields=["points"], name="carbon_gree_points_05a484_idx"),
        ),
        migrations.AddIndex(
            model_name="greenpoints",
            index=models.Index(
                fields=["last_scan"], name="carbon_gree_last_sc_f90917_idx"
            ),
        ),
    ]
