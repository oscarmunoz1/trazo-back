# Generated by Django 4.1.4 on 2025-06-19 01:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("carbon", "0015_add_crop_types_and_templates"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="eventtemplate",
            options={
                "ordering": ["production_template", "order_sequence", "timing", "name"],
                "verbose_name": "Event Template",
                "verbose_name_plural": "Event Templates",
            },
        ),
        migrations.AddField(
            model_name="eventtemplate",
            name="alternative_methods",
            field=models.JSONField(
                default=list, help_text="Alternative methods for this event"
            ),
        ),
        migrations.AddField(
            model_name="eventtemplate",
            name="consumer_message",
            field=models.CharField(
                blank=True, help_text="Message shown to consumers", max_length=200
            ),
        ),
        migrations.AddField(
            model_name="eventtemplate",
            name="emission_factor_source",
            field=models.CharField(
                default="USDA Agricultural Research Service", max_length=200
            ),
        ),
        migrations.AddField(
            model_name="eventtemplate",
            name="is_required",
            field=models.BooleanField(
                default=False, help_text="Required event that cannot be disabled"
            ),
        ),
        migrations.AddField(
            model_name="eventtemplate",
            name="labor_hours",
            field=models.FloatField(
                default=0.0, help_text="Estimated labor hours per hectare"
            ),
        ),
        migrations.AddField(
            model_name="eventtemplate",
            name="order_sequence",
            field=models.IntegerField(
                default=0, help_text="Order in which this event typically occurs"
            ),
        ),
        migrations.AddField(
            model_name="eventtemplate",
            name="usda_compliant",
            field=models.BooleanField(default=True, help_text="Meets USDA standards"),
        ),
        migrations.AddField(
            model_name="eventtemplate",
            name="usda_practice_code",
            field=models.CharField(
                blank=True,
                help_text="USDA NRCS practice code if applicable",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="eventtemplate",
            name="carbon_category",
            field=models.CharField(
                choices=[
                    ("high", "High Impact (>100 kg CO2e)"),
                    ("medium", "Medium Impact (25-100 kg CO2e)"),
                    ("low", "Low Impact (<25 kg CO2e)"),
                    ("negative", "Negative Impact (Carbon Sequestration)"),
                    ("neutral", "Carbon Neutral"),
                ],
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="eventtemplate",
            name="event_type",
            field=models.CharField(
                choices=[
                    ("fertilization", "Fertilization"),
                    ("irrigation", "Irrigation"),
                    ("pest_control", "Pest Control"),
                    ("pruning", "Pruning"),
                    ("planting", "Planting"),
                    ("harvest", "Harvest"),
                    ("soil_management", "Soil Management"),
                    ("equipment", "Equipment Operation"),
                    ("weather_protection", "Weather Protection"),
                    ("certification", "Certification Activity"),
                    ("monitoring", "Monitoring & Testing"),
                    ("other", "Other"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="eventtemplate",
            name="frequency",
            field=models.CharField(
                choices=[
                    ("annual", "Annual"),
                    ("seasonal", "Seasonal"),
                    ("monthly", "Monthly"),
                    ("weekly", "Weekly"),
                    ("as_needed", "As Needed"),
                    ("natural", "Natural Process"),
                    ("one_time", "One Time Setup"),
                ],
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="ProductionTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., Citrus Organic Production", max_length=100
                    ),
                ),
                (
                    "slug",
                    models.SlugField(help_text="e.g., citrus_organic", max_length=100),
                ),
                (
                    "farming_approach",
                    models.CharField(
                        choices=[
                            ("conventional", "Conventional"),
                            ("organic", "Organic"),
                            ("precision", "Precision Agriculture"),
                            ("regenerative", "Regenerative"),
                            ("sustainable", "Sustainable"),
                            ("integrated", "Integrated Pest Management"),
                            ("no_till", "No-Till"),
                            ("cover_crop", "Cover Crop System"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of this production approach"
                    ),
                ),
                (
                    "complexity_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner Friendly"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                            ("expert", "Expert Level"),
                        ],
                        default="intermediate",
                        max_length=15,
                    ),
                ),
                (
                    "estimated_setup_time",
                    models.IntegerField(default=8, help_text="Setup time in minutes"),
                ),
                (
                    "projected_emissions_reduction",
                    models.FloatField(
                        default=0.0, help_text="% reduction vs conventional"
                    ),
                ),
                (
                    "projected_cost_change",
                    models.FloatField(
                        default=0.0, help_text="% cost change vs conventional"
                    ),
                ),
                (
                    "projected_yield_impact",
                    models.FloatField(
                        default=0.0, help_text="% yield change vs conventional"
                    ),
                ),
                (
                    "premium_pricing_potential",
                    models.CharField(
                        default="0%", help_text="e.g., 25-40%", max_length=20
                    ),
                ),
                (
                    "market_demand",
                    models.CharField(
                        choices=[
                            ("low", "Low Demand"),
                            ("medium", "Medium Demand"),
                            ("high", "High Demand"),
                            ("very_high", "Very High Demand"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "certification_requirements",
                    models.JSONField(default=list, help_text="Required certifications"),
                ),
                (
                    "compliance_notes",
                    models.TextField(
                        blank=True, help_text="USDA compliance and regulatory notes"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_recommended",
                    models.BooleanField(
                        default=False, help_text="Recommended template for this crop"
                    ),
                ),
                (
                    "usage_count",
                    models.IntegerField(
                        default=0,
                        help_text="How many times this template has been used",
                    ),
                ),
                (
                    "success_rate",
                    models.FloatField(
                        default=0.0, help_text="Success rate based on user feedback"
                    ),
                ),
                (
                    "usda_reviewed",
                    models.BooleanField(
                        default=False,
                        help_text="Template reviewed against USDA practices",
                    ),
                ),
                (
                    "usda_compliant",
                    models.BooleanField(
                        default=True, help_text="Meets USDA agricultural standards"
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "crop_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="production_templates",
                        to="carbon.croptype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Production Template",
                "verbose_name_plural": "Production Templates",
                "db_table": "carbon_production_template",
                "ordering": ["crop_type", "farming_approach", "name"],
                "unique_together": {("crop_type", "slug")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="eventtemplate",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="eventtemplate",
            name="production_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_templates",
                to="carbon.productiontemplate",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eventtemplate",
            unique_together={("production_template", "name")},
        ),
        migrations.RemoveField(
            model_name="eventtemplate",
            name="crop_type",
        ),
    ]
