# Generated by Django 4.1.4 on 2025-06-19 00:39

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("carbon", "0014_update_usda_verification_fields"),
    ]

    operations = [
        migrations.CreateModel(
            name="CropType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., Citrus (Oranges)", max_length=100, unique=True
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="e.g., citrus_oranges", max_length=100, unique=True
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("tree_fruit", "Tree Fruit"),
                            ("tree_nut", "Tree Nut"),
                            ("grain", "Grain"),
                            ("oilseed", "Oilseed"),
                            ("vegetable", "Vegetable"),
                            ("herb", "Herb"),
                            ("legume", "Legume"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Brief description of the crop type"),
                ),
                (
                    "typical_farm_size",
                    models.CharField(help_text="e.g., 20-100 hectares", max_length=100),
                ),
                (
                    "growing_season",
                    models.CharField(
                        help_text="e.g., 12 months (evergreen)", max_length=100
                    ),
                ),
                (
                    "harvest_season",
                    models.CharField(
                        help_text="e.g., November - April", max_length=100
                    ),
                ),
                (
                    "emissions_per_hectare",
                    models.FloatField(help_text="kg CO2e per hectare"),
                ),
                (
                    "industry_average",
                    models.FloatField(help_text="Industry average emissions"),
                ),
                (
                    "best_practice",
                    models.FloatField(help_text="Best practice emissions"),
                ),
                (
                    "carbon_credit_potential",
                    models.FloatField(help_text="Potential carbon credits per hectare"),
                ),
                (
                    "typical_cost_per_hectare",
                    models.FloatField(help_text="Total production cost per hectare"),
                ),
                ("fertilizer_cost_per_hectare", models.FloatField(default=0.0)),
                ("fuel_cost_per_hectare", models.FloatField(default=0.0)),
                ("irrigation_cost_per_hectare", models.FloatField(default=0.0)),
                ("labor_cost_per_hectare", models.FloatField(default=0.0)),
                (
                    "organic_premium",
                    models.CharField(
                        default="0%", help_text="e.g., 25-40%", max_length=20
                    ),
                ),
                (
                    "sustainable_premium",
                    models.CharField(
                        default="0%", help_text="e.g., 10-20%", max_length=20
                    ),
                ),
                (
                    "local_premium",
                    models.CharField(
                        default="0%", help_text="e.g., 5-15%", max_length=20
                    ),
                ),
                (
                    "sustainability_opportunities",
                    models.JSONField(
                        default=list, help_text="List of sustainability practices"
                    ),
                ),
                ("usda_verified", models.BooleanField(default=False)),
                (
                    "data_source",
                    models.CharField(
                        default="USDA Agricultural Research Service", max_length=200
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Crop Type",
                "verbose_name_plural": "Crop Types",
                "db_table": "carbon_crop_type",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EventTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="e.g., Winter Pruning", max_length=100),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("fertilization", "Fertilization"),
                            ("irrigation", "Irrigation"),
                            ("pest_control", "Pest Control"),
                            ("pruning", "Pruning"),
                            ("planting", "Planting"),
                            ("harvest", "Harvest"),
                            ("soil_management", "Soil Management"),
                            ("equipment", "Equipment Operation"),
                            ("weather_protection", "Weather Protection"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed description of the event"),
                ),
                (
                    "timing",
                    models.CharField(
                        help_text="e.g., December - February", max_length=100
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("annual", "Annual"),
                            ("seasonal", "Seasonal"),
                            ("monthly", "Monthly"),
                            ("as_needed", "As Needed"),
                            ("natural", "Natural Process"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "typical_duration",
                    models.CharField(help_text="e.g., 2-3 hours", max_length=50),
                ),
                (
                    "carbon_impact",
                    models.FloatField(
                        help_text="kg CO2e impact (negative for sequestration)"
                    ),
                ),
                (
                    "carbon_category",
                    models.CharField(
                        choices=[
                            ("high", "High Impact (>100 kg CO2e)"),
                            ("medium", "Medium Impact (25-100 kg CO2e)"),
                            ("low", "Low Impact (<25 kg CO2e)"),
                            ("negative", "Negative Impact (Carbon Sequestration)"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "carbon_sources",
                    models.JSONField(default=list, help_text="List of carbon sources"),
                ),
                (
                    "typical_amounts",
                    models.JSONField(default=dict, help_text="Typical amounts used"),
                ),
                (
                    "cost_estimate",
                    models.FloatField(help_text="Estimated cost per hectare"),
                ),
                (
                    "efficiency_tips",
                    models.TextField(
                        help_text="Tips for reducing environmental impact"
                    ),
                ),
                (
                    "sustainability_score",
                    models.IntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "qr_visibility",
                    models.CharField(
                        choices=[
                            ("high", "High - Prominent display to consumers"),
                            ("medium", "Medium - Standard visibility"),
                            ("low", "Low - Technical information"),
                            ("hidden", "Hidden - Internal use only"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                (
                    "backend_event_type",
                    models.IntegerField(
                        help_text="Maps to backend event model: 0=Weather, 1=Chemical, 2=Production, 3=General, 4=Equipment, 5=Soil, 6=Pest"
                    ),
                ),
                (
                    "backend_event_fields",
                    models.JSONField(
                        default=dict,
                        help_text="Default field values for backend event creation",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_default_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Enabled by default in production creation",
                    ),
                ),
                (
                    "usage_count",
                    models.IntegerField(
                        default=0, help_text="Track how often this template is used"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "crop_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_templates",
                        to="carbon.croptype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Event Template",
                "verbose_name_plural": "Event Templates",
                "db_table": "carbon_event_template",
                "ordering": ["crop_type", "timing", "name"],
                "unique_together": {("crop_type", "name")},
            },
        ),
    ]
