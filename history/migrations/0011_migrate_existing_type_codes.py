# Generated by Django 4.1.4 on 2025-05-24 18:50

from django.db import migrations


def migrate_type_codes_forward(apps, schema_editor):
    """
    Migrate existing type codes from old colliding codes to new unique codes
    """
    WeatherEvent = apps.get_model('history', 'WeatherEvent')
    EquipmentEvent = apps.get_model('history', 'EquipmentEvent')
    
    # Update WeatherEvent: HA (Hailstorm) -> HL
    WeatherEvent.objects.filter(type='HA').update(type='HL')
    
    # Update EquipmentEvent: MA (Maintenance) -> MN
    EquipmentEvent.objects.filter(type='MA').update(type='MN')
    
    # Update EquipmentEvent: BR (Breakdown) -> BD  
    EquipmentEvent.objects.filter(type='BR').update(type='BD')
    
    # Update EquipmentEvent: IN (Inspection) -> EI
    EquipmentEvent.objects.filter(type='IN').update(type='EI')


def migrate_type_codes_reverse(apps, schema_editor):
    """
    Reverse migration: change back to old codes (for rollback)
    """
    WeatherEvent = apps.get_model('history', 'WeatherEvent')
    EquipmentEvent = apps.get_model('history', 'EquipmentEvent')
    
    # Reverse WeatherEvent: HL -> HA
    WeatherEvent.objects.filter(type='HL').update(type='HA')
    
    # Reverse EquipmentEvent: MN -> MA
    EquipmentEvent.objects.filter(type='MN').update(type='MA')
    
    # Reverse EquipmentEvent: BD -> BR
    EquipmentEvent.objects.filter(type='BD').update(type='BR')
    
    # Reverse EquipmentEvent: EI -> IN
    EquipmentEvent.objects.filter(type='EI').update(type='IN')


class Migration(migrations.Migration):

    dependencies = [
        ("history", "0010_fix_type_code_collisions"),
    ]

    operations = [
        migrations.RunPython(
            migrate_type_codes_forward,
            migrate_type_codes_reverse,
        ),
    ]
