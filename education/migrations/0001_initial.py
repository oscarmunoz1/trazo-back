# Generated by Django 4.1.4 on 2025-06-07 20:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EducationCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("getting_started", "Getting Started with Trazo"),
                            ("carbon_tracking", "Carbon Footprint Tracking"),
                            ("iot_automation", "IoT & Farm Automation"),
                            ("sustainability", "Sustainable Farming Practices"),
                            ("consumer_engagement", "Consumer Transparency & QR Codes"),
                            ("cost_optimization", "Cost Savings & ROI"),
                            ("compliance", "USDA Compliance & Certifications"),
                            ("troubleshooting", "Common Issues & Solutions"),
                        ],
                        max_length=30,
                        unique=True,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "icon",
                    models.CharField(help_text="Icon class name for UI", max_length=50),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Education Categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="EducationCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner - New to Trazo"),
                            ("intermediate", "Intermediate - Basic Trazo Knowledge"),
                            ("advanced", "Advanced - Expert Features"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "required_plan",
                    models.CharField(
                        choices=[
                            ("basic", "Basic Plan"),
                            ("standard", "Standard Plan & Above"),
                            ("corporate", "Corporate Plan Only"),
                            ("all", "All Plans"),
                        ],
                        default="all",
                        max_length=20,
                    ),
                ),
                (
                    "estimated_duration",
                    models.PositiveIntegerField(help_text="Duration in minutes"),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "target_crops",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated list of relevant crops",
                        max_length=200,
                    ),
                ),
                (
                    "farm_size_min",
                    models.PositiveIntegerField(
                        blank=True, help_text="Minimum farm size in acres", null=True
                    ),
                ),
                (
                    "farm_size_max",
                    models.PositiveIntegerField(
                        blank=True, help_text="Maximum farm size in acres", null=True
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to="education.educationcategory",
                    ),
                ),
            ],
            options={
                "ordering": ["category", "order", "title"],
            },
        ),
        migrations.CreateModel(
            name="EducationLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("text", "Text Guide"),
                            ("video", "Video Tutorial"),
                            ("interactive", "Interactive Demo"),
                            ("checklist", "Step-by-Step Checklist"),
                            ("case_study", "Real Farm Example"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Main lesson content in markdown format"
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        blank=True, help_text="Video URL for video lessons"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(help_text="Lesson duration in minutes"),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("has_quiz", models.BooleanField(default=False)),
                ("quiz_questions", models.JSONField(blank=True, default=dict)),
                (
                    "practical_steps",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Actionable steps for farmers",
                    ),
                ),
                (
                    "real_farm_example",
                    models.TextField(
                        blank=True, help_text="Real farm case study or example"
                    ),
                ),
                (
                    "cost_savings_potential",
                    models.CharField(
                        blank=True,
                        help_text='e.g., "$500-1,200 annually"',
                        max_length=100,
                    ),
                ),
                (
                    "time_savings_potential",
                    models.CharField(
                        blank=True,
                        help_text='e.g., "2-3 hours per week"',
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="education.educationcourse",
                    ),
                ),
            ],
            options={
                "ordering": ["course", "order", "title"],
            },
        ),
        migrations.CreateModel(
            name="FarmerQuestionAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=300)),
                ("answer", models.TextField()),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("setup", "Getting Started"),
                            ("data_entry", "Data Entry & Events"),
                            ("carbon", "Carbon Tracking"),
                            ("iot", "IoT & Automation"),
                            ("qr_codes", "QR Codes & Consumers"),
                            ("billing", "Pricing & Plans"),
                            ("technical", "Technical Issues"),
                            ("compliance", "USDA & Certifications"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("helpful_votes", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-helpful_votes", "-view_count"],
            },
        ),
        migrations.CreateModel(
            name="UserEducationProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "quiz_score",
                    models.PositiveIntegerField(
                        blank=True, help_text="Quiz score as percentage", null=True
                    ),
                ),
                (
                    "time_spent",
                    models.PositiveIntegerField(
                        default=0, help_text="Time spent in minutes"
                    ),
                ),
                ("bookmarked", models.BooleanField(default=False)),
                (
                    "helpful_rating",
                    models.PositiveIntegerField(
                        blank=True, help_text="1-5 star rating", null=True
                    ),
                ),
                ("feedback", models.TextField(blank=True)),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="education.educationlesson",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "lesson")},
            },
        ),
        migrations.CreateModel(
            name="EducationCertificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("issued_at", models.DateTimeField(auto_now_add=True)),
                ("certificate_id", models.CharField(max_length=50, unique=True)),
                ("completion_percentage", models.PositiveIntegerField()),
                (
                    "total_time_spent",
                    models.PositiveIntegerField(help_text="Total time in minutes"),
                ),
                (
                    "average_quiz_score",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="education.educationcourse",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "course")},
            },
        ),
        migrations.CreateModel(
            name="EducationBookmark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Personal notes about the lesson"
                    ),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="education.educationlesson",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "lesson")},
            },
        ),
    ]
